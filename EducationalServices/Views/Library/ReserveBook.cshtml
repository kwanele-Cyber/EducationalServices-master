@model EducationalServices.Models.ReserveBookVM

<h2>Reserve Book</h2>

@using (Html.BeginForm("ReserveBook", "Library", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.BookId)

    <div class="container">
        <div class="row">
            <img src="~/Content/img/@Model.ImagePath" class="col-xs-12
                   col-s-12 
                   col-md-6
                   object-fit-cover border rounded" alt="">
            <div class="col">
                <div class="form-group">
                    <h2 class="control-label col-md-2">@Model.BookTitle</h2>
                </div>
                
                <div class="form-group">
                    <h5 class="control-label col-md-2">@Model.BookAuthor</h5>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReservationStart, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReservationStart, new { htmlAttributes = new { @class = "form-control", @type = "date", @id="start" } })
                        @Html.ValidationMessageFor(model => model.ReservationStart, "", new { @class = "text-danger", id="start-error"})
                    </div>
                </div>
                

                <div class="form-group">
                    
                    <div class="col-md-10">
                        <button type="submit">Continue</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts{
    <script>
        const startDate = document.getElementById("start");
        const endDate = document.getElementById("end");
        const today = new Date();


        startDate.addEventListener("change",(e) => {
            let date = new Date(startDate.value);
            let end = new Date(endDate.value);

            console.log("startDate: ",date);
            document.getElementById("start-error").innerText = "";


            if(date < today)
            {
                document.getElementById("start-error").innerText +=`\n select a date greater than ${today.toDateString()}`
                
            }
            if(date >= end)
            {
                document.getElementById("start-error").innerText +=`\n select a date less than ${end.toDateString()}`
            }
        })

        endDate.addEventListener("change",(e) => {
            let date = new Date(endDate.value);
            let start = new Date(startDate.value);
            console.log("endDate: ",date);
            document.getElementById("end-error").innerText = "";


            if(date < today)
            {
                document.getElementById("end-error").innerText +=`\n select a date greater than ${today.toDateString()}`
            }
            if(date <= start)
            {
                document.getElementById("end-error").innerText +=`\n select a date greater than ${start.toDateString()}`
            }
        })
    </script>
}
